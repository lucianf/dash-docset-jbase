<!--?xml version="1.0" encoding="UTF-8"?--><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <meta http-equiv="Content-Style-Type" content="text/css"/>
  <meta name="generator" content="pandoc"/>
  <title class="statement">OSREAD</title>
  <link rel="stylesheet" type="text/css" href="stylesheet.css"/>
</head>
<body>
<div id="osread-statement" class="section level1">
<a class="dashingAutolink" name="autolink-255"></a><a class="dashAnchor" name="//apple_ref/cpp/Method/OSREAD"></a><h1 class="statement">OSREAD</h1>
<p>OSREAD reads an OS file.</p>
<div id="command-syntax-214" class="section level2">
<h2>COMMAND SYNTAX</h2>
<pre><code>OSREAD Variable FROM expression { ON ERROR Statements }  \
      { THEN | ELSE } Statements</code></pre>
</div>
<div id="syntax-elements-154" class="section level2">
<h2>SYNTAX ELEMENTS</h2>
<p><strong>Variable</strong> specifies the variable which is to be assigned to the read data.</p>
<p><strong>Expression</strong> specifies the full file path. If the file resides in the JEDIFILEPATH then just the file name is required.</p>
<p><strong>ON ERROR</strong> Statements are conditional jBC statements to be executed when the OSREAD statement fails with fatal error (because the file is not open), I/O error, or jBASE cannot find the file. If you do not specify the ON ERROR clause and a fatal error occurs, the program will terminate.</p>
<p>THEN | ELSE: If the OSREAD statement fails, it will execute any statements associated with an ELSE clause. If the OSREAD is successful, it will execute any statements associated with a THEN clause. Note that the syntax requires either one or both of the THEN and ELSE clauses.</p>
</div>
<div id="warning" class="section level2">
<h2>WARNING</h2>
<p>Do not use OSREAD on large files. The jBC OSREAD command reads an entire sequential file and assigns the contents of the file to a variable. If the file is too large for the program memory, the program aborts and generates a runtime error message. On large files, use <a href="#OSBREAD">OSBREAD</a> or <a href="#READSEQ">READSEQ</a>. jBASE uses the ASCII 0 character (CHAR (0)) as a string-end delimiter. ASCII 0 is not useable within string variable in jBC. This command converts CHAR(0) to CHAR(128) when reading a block of data.</p>
</div>
<div id="note-15" class="section level2">
<h2>NOTE</h2>
<p>OSREAD doesn&#39;t include the LF character after the last line in the file to the resulting variable:</p>
</div>
<div id="example-146" class="section level2">
<h2>EXAMPLE</h2>
<pre><code>   V.DIR.OUT = &#39;.&#39;  ;   V.FILE.OUT = &#39;report.txt&#39;
   OPENSEQ V.DIR.OUT, V.FILE.OUT TO F.FILE.OUT THEN
      WEOFSEQ F.FILE.OUT
   END ELSE
      CREATE F.FILE.OUT ELSE CRT &#39;File create error&#39;  ;  STOP
   END
   V.BUFFER = STR(&#39;.&#39;, 999)
   LOOP
      WRITESEQ V.BUFFER TO F.FILE.OUT ELSE CRT &#39;Write error&#39;  ;  STOP
      V.FILE.SIZE = DIR(V.FILE.OUT)&lt;1&gt;
      CRT V.FILE.SIZE
   UNTIL V.FILE.SIZE GE 10000
   REPEAT
   CLOSESEQ F.FILE.OUT
   OSREAD V.ALL FROM V.FILE.OUT ELSE CRT &#39;Read error&#39;  ;  STOP
   CRT LEN(V.ALL)
   CRT DQUOTE( RIGHT(V.ALL, 20) )</code></pre>
<p>Output:</p>
<pre>    1000
    2000
    3000
    4000
    5000
    6000
    7000
    8000
    9000
    10000
    9999
    &#34;....................&#34;</pre>
</div>
</div>



</body></html>