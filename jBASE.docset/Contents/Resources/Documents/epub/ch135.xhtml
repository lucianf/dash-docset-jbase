<!--?xml version="1.0" encoding="UTF-8"?--><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <meta http-equiv="Content-Style-Type" content="text/css"/>
  <meta name="generator" content="pandoc"/>
  <title class="function">EXTRACT</title>
  <link rel="stylesheet" type="text/css" href="stylesheet.css"/>
</head>
<body>
<div id="extract-function" class="section level1">
<a class="dashingAutolink" name="autolink-134"></a><a class="dashAnchor" name="//apple_ref/cpp/Function/EXTRACT"></a><h1 class="function">EXTRACT</h1>
<p>The EXTRACT function is an alternative method of accessing values in a dynamic array other than using the <n,n,n> syntax described earlier.</n,n,n></p>
<div id="command-syntax-97" class="section level2">
<h2>COMMAND SYNTAX</h2>
<pre><code>EXTRACT(expression1, expression2 {, expression3 {, expression4}})</code></pre>
</div>
<div id="syntax-elements-61" class="section level2">
<h2>SYNTAX ELEMENTS</h2>
<p><strong>expression1</strong> specifies the dynamic array to work with and will normally be a previously assigned variable.</p>
<p>The expressions 2 through 4 should all return a numeric value or a runtime error will occur and the program will enter the debugger.</p>
<p><strong>expression2</strong> specifies the field to extract, <strong>expression3</strong> the value to extract and <strong>expression4</strong> the sub-value to extract.</p>
</div>
<div id="examples-17" class="section level2">
<h2>EXAMPLES</h2>
<pre><code>array = &#34;0&#34;    ;    array&lt;2&gt; = &#34;1&#34;    ;    array&lt;3&gt; = &#34;2&#34;    ;    array&lt;2,2&gt; = &#39;Text&#39;
CRT DQUOTE( OCONV( EXTRACT(array, 2), &#39;MCP&#39; ) )    ;*    &#34;1]Text&#34;
CRT DQUOTE( EXTRACT(array, 2, 2) )                 ;*    &#34;Text&#34;
CRT DQUOTE( EXTRACT(array, -1) )                   ;*    &#34;&#34;</code></pre>
<p>This finction is useful when you need to take a part of a dynamic array in EVAL clause of jQL statement (angle brackets notation won&#39;t work), e.g.:</p>
<pre>    LIST . SAMPLE 1 EVAL &#34;(-12:@FM:5:@FM:-7)&lt;2&gt;&#34; ID.SUPP
    &nbsp;
    Error in Statement &#34;LIST . SAMPLE 1 EVAL &#34;(-12:@FM:5:@FM:-7)&lt;2&gt;&#34;&#34;
    Error in attribute definition item (-12:@FM:5:@FM:-7)&lt;2&gt;
    Error in Itype: expecting EOF, found &#39;&gt;&#39;
    &nbsp;
    LIST . SAMPLE 1 EVAL &#34;EXTRACT(-12:@FM:5:@FM:-7, 2)&#34; ID.SUPP
    &nbsp;
    5</pre>
</div>
</div>



</body></html>