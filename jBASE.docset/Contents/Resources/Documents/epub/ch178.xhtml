<!--?xml version="1.0" encoding="UTF-8"?--><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <meta http-equiv="Content-Style-Type" content="text/css"/>
  <meta name="generator" content="pandoc"/>
  <title class="statement">INS</title>
  <link rel="stylesheet" type="text/css" href="stylesheet.css"/>
</head>
<body>
<div id="ins-statement" class="section level1">
<a class="dashingAutolink" name="autolink-177"></a><a class="dashAnchor" name="//apple_ref/cpp/Method/INS"></a><h1 class="statement">INS</h1>
<p>The INS statement allows the insertion of elements into a dynamic array.</p>
<div id="command-syntax-138" class="section level2">
<h2>COMMAND SYNTAX</h2>
<pre><code>INS expression BEFORE Var&lt;expression1{, expression2{, expression3}}&gt;</code></pre>
</div>
<div id="syntax-elements-93" class="section level2">
<h2>SYNTAX ELEMENTS</h2>
<p><strong>expression</strong> evaluates to the element to be inserted in the dynamic array.</p>
<p><strong>expression1</strong> expression2 and expression3 should all evaluate to numeric values and specify the Field, Value and Sub-Value before which the new element is to be inserted.</p>
</div>
<div id="notes-89" class="section level2">
<h2>NOTES</h2>
<p>Specifying a negative value to any of the expressions 1 through 3 will cause the element to append as the last Field, Value or Sub-Value rather than at a specific position. Only one expression may be negative otherwise only the first negative value is used correctly while the others are treated as the value 1.</p>
<p>The statement will insert NULL Fields, Values or Sub-Values accordingly if any of the specified insertion points exceeds the number currently existing.</p>
</div>
<div id="example-107" class="section level2">
<h2>EXAMPLE</h2>
<pre><code>   Values = &#39;&#39;
   FOR I = 1 TO 50
      INS I BEFORE Values&lt;-1&gt;
   NEXT I
   FOR I = 2 TO 12
      INS I*7 BEFORE Values&lt;7,I&gt;
   NEXT I
   CRT FMT(Values, &#39;MCP&#39;)</code></pre>
<p>The output is (one line):</p>
<pre>    1^2^3^4^5^6^7]14]21]28]35]42]49]56]63]70]77]84^8^9^10^11^12^13^14^15^16^
    17^18^19^20^21^22^23^24^25^26^27^28^29^30^31^32^33^34^35^36^37^38^39^40^
    41^42^43^44^45^46^47^48^49^50</pre>
</div>
</div>



</body></html>