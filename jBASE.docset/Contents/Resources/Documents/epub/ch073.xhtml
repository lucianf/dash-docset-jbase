<!--?xml version="1.0" encoding="UTF-8"?--><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <meta http-equiv="Content-Style-Type" content="text/css"/>
  <meta name="generator" content="pandoc"/>
  <title class="statement">CASE</title>
  <link rel="stylesheet" type="text/css" href="stylesheet.css"/>
</head>
<body>
<div id="case-statement" class="section level1">
<a class="dashingAutolink" name="autolink-72"></a><a class="dashAnchor" name="//apple_ref/cpp/Method/CASE"></a><h1 class="statement">CASE</h1>
<p>The CASE statement allows the programmer to execute a particular sequence of instructions based upon the results of a series of test expressions.</p>
<div id="command-syntax-38" class="section level2">
<h2>COMMAND SYNTAX</h2>
<pre><code>    BEGIN CASE
    CASE expression statement(s)
    CASE expression
    *statement(s)
    *. . .
    END CASE</code></pre>
</div>
<div id="syntax-elements-16" class="section level2">
<h2>SYNTAX ELEMENTS</h2>
<p>The BEGIN CASE and END CASE statements bound the CASE structure. Within this block, an arbitrary number of CASE expression statements may exist followed by any number of jBC statements. The expression should evaluate to a TRUE or FALSE result. The evaluation of each expression at execution time is in order. If the expression returns a TRUE result, it then executes the statements below. On completion of the associated statements, execution will resume at the first statement following the END CASE.</p>
</div>
<div id="notes-24" class="section level2">
<h2>NOTES:</h2>
<p>A default action (to trap error conditions for instance) may be introduced by using an expression that is always TRUE, such as &#34;CASE 1&#34;. This should always be the last expression in the CASE block.</p>
</div>
<div id="example-41" class="section level2">
<h2>EXAMPLE</h2>
<pre><code>   V.STRING = &#39;B&#39;
   GOSUB CHK.IT
   V.STRING = &#39;ABC&#39;
   GOSUB CHK.IT
   STOP
*
CHK.IT:
*
   BEGIN CASE
   CASE V.STRING EQ &#39;A&#39;
      CRT &#39;an A&#39;
   CASE  V.STRING EQ &#39;B&#39;
      CRT &#39;a B&#39;
   CASE V.STRING EQ &#39;C&#39;
      CRT &#39;a C&#39;
   CASE 1
      CRT &#39;neither A nor B nor C&#39;
   END CASE
   RETURN
END</code></pre>
<p>Output:</p>
<pre>    a B
    neither A nor B nor C
     </pre>
</div>
</div>



</body></html>