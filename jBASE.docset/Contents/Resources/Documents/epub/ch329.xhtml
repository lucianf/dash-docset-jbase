<!--?xml version="1.0" encoding="UTF-8"?--><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <meta http-equiv="Content-Style-Type" content="text/css"/>
  <meta name="generator" content="pandoc"/>
  <title class="function">SUBSTRINGS</title>
  <link rel="stylesheet" type="text/css" href="stylesheet.css"/>
</head>
<body>
<div id="substrings-function" class="section level1">
<a class="dashingAutolink" name="autolink-328"></a><a class="dashAnchor" name="//apple_ref/cpp/Function/SUBSTRINGS"></a><h1 class="function">SUBSTRINGS</h1>
<p>SUBSTRINGS function returns a dynamic array of elements, which are sub-strings of the corresponding elements in a supplied dynamic array.</p>
<div id="command-syntax-278" class="section level2">
<h2>COMMAND SYNTAX</h2>
<pre><code>SUBSTRINGS(DynArr, Start, Length)</code></pre>
</div>
<div id="syntax-elements-212" class="section level2">
<h2>SYNTAX ELEMENTS</h2>
<p><strong>DynArr</strong> should evaluate to a dynamic array.</p>
<p><strong>Start</strong> specifies the position from which characters are extracted from each array element. It should evaluate to an integer greater than zero.</p>
<p><strong>Length</strong> specifies the number of characters to extract from each dynamic array element. If the length specified exceeds the number of characters remaining in an array element then all characters from the Start position are extracted.</p>
</div>
<div id="international-mode-25" class="section level2">
<h2>INTERNATIONAL MODE</h2>
<p>When using the SUBSTRINGS function in International Mode, the function will use the &#39;start&#39; and &#39;length&#39; parameters to the function as character count values, rather than bytecount</p>
</div>
<div id="examples-70" class="section level2">
<h2>EXAMPLES</h2>
<p>The following program shows how each element of a dynamic array can be changed with the FIELDS function.</p>
<pre><code>t = &#34;&#34;
t&lt;1&gt; = &#34;AAAAA&#34;
t&lt;2&gt; = &#34;BBBBB&#34; :@VM: &#34;CCCCC&#34; : @SM: &#34;DDDDD&#34;
t&lt;3&gt; = &#34;EEEEE&#34; :@VM: @SM
r1 = SUBSTRINGS(t,3,2)
r2 = SUBSTRINGS(t,4,20)
r3 = SUBSTRINGS(t,0,1)</code></pre>
<p>The above program creates 3 dynamic arrays. v represents a value mark. s represents a sub-value mark.</p>
<table>
<thead>
<tr class="header">
<th align="left">Array</th>
<th align="left">Contents</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td align="left">r1</td>
<td align="left">&lt;1&gt;AA</td>
</tr>
<tr class="even">
<td align="left"></td>
<td align="left">&lt;2&gt;BB v CC s DD</td>
</tr>
<tr class="odd">
<td align="left"></td>
<td align="left"></td>
</tr>
<tr class="even">
<td align="left"></td>
<td align="left">&lt;3&gt;EE v s</td>
</tr>
<tr class="odd">
<td align="left"></td>
<td align="left"></td>
</tr>
<tr class="even">
<td align="left">r2</td>
<td align="left">&lt;1&gt;AA</td>
</tr>
<tr class="odd">
<td align="left"></td>
<td align="left"></td>
</tr>
<tr class="even">
<td align="left"></td>
<td align="left">&lt;#&gt;BB v CC s</td>
</tr>
<tr class="odd">
<td align="left"></td>
<td align="left"></td>
</tr>
<tr class="even">
<td align="left"></td>
<td align="left">&lt;3&gt;EE v s</td>
</tr>
<tr class="odd">
<td align="left"></td>
<td align="left"></td>
</tr>
<tr class="even">
<td align="left">r3</td>
<td align="left">&lt;1&gt;A</td>
</tr>
<tr class="odd">
<td align="left"></td>
<td align="left"></td>
</tr>
<tr class="even">
<td align="left"></td>
<td align="left">&lt;2&gt;B v C s D</td>
</tr>
<tr class="odd">
<td align="left"></td>
<td align="left"></td>
</tr>
<tr class="even">
<td align="left"></td>
<td align="left">&lt;3&gt;E v s</td>
</tr>
</tbody>
</table>
</div>
</div>



</body></html>