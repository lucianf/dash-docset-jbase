<!--?xml version="1.0" encoding="UTF-8"?--><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <meta http-equiv="Content-Style-Type" content="text/css"/>
  <meta name="generator" content="pandoc"/>
  <title class="statement">COMMON</title>
  <link rel="stylesheet" type="text/css" href="stylesheet.css"/>
</head>
<body>
<div id="common-statement" class="section level1">
<a class="dashingAutolink" name="autolink-92"></a><a class="dashAnchor" name="//apple_ref/cpp/Method/COMMON"></a><h1 class="statement">COMMON</h1>
<p>The COMMON statement declares a list of variables and matrices that can be shared among various programs. There can be many common areas including a default, unnamed common area.</p>
<div id="command-syntax-57" class="section level2">
<h2>COMMAND SYNTAX</h2>
<pre><code>COMMON { /CommonName/ } variable {, variable ... }</code></pre>
</div>
<div id="syntax-elements-31" class="section level2">
<h2>SYNTAX ELEMENTS</h2>
<p>The list of variables should not have been declared or referenced previously in the program file. The compiler will detect any bad declarations and display suitable warning or error messages. If the common area declared with the statement is to be named then the first entry in the list should be a string, delimited by the / character.</p>
</div>
<div id="notes-35" class="section level2">
<h2>NOTES</h2>
<p>The compiler will not, by default, check that variables declared in COMMON statements are initialized before they have been used as this may be beyond the scope of this single source code check. The -JCi option, when specified to the jBC compiler, will force this check to be applied to common variables as well. The initialization of named common is controlled in the Config_EMULATE file.</p>
<p>Variables declared without naming the common area may only be shared between the program and its subroutines (unless CHAIN is used). Variables declared in a named common area may be shared across program boundaries.</p>
<p>Dimensioned arrays are declared and dimensioned within the COMMON statement.</p>
</div>
<div id="example-57" class="section level2">
<h2>EXAMPLE</h2>
<pre><code>   COMMON /MY.COMM/ V.VAR1
   CRT ASSIGNED(V.VAR1)   ;* depends on emulation (e.g. 1 for prime)
   CRT V.VAR1             ;* first run: again depends on emulation
                          ;* (e.g. 0 for prime), second run: YES
   CRT ASSIGNED(V.VAR2)   ;* 0
   V.VAR1 = &#39;YES&#39;
   V.VAR2 = &#39;NO&#39;</code></pre>
</div>
<div id="note-9" class="section level2">
<h2>NOTE</h2>
<p>When a COMMON area is used in different programs or subroutines, it has to be declared in each of them. Variable names can be different but their number has to be the same.</p>
</div>
<div id="example-58" class="section level2">
<h2>EXAMPLE</h2>
<p>Program test.b:</p>
<pre><code>   COMMON /MY.AREA/ global_var, global_dyn_array
   global_var = 42
   EXECUTE &#39;test2&#39;</code></pre>
<p>Program test2.b:</p>
<pre><code>   COMMON /MY.AREA/ my_var, my_dyn_array
   CRT my_var</code></pre>
<p>Run program test:</p>
<pre>    42</pre>
</div>
<div id="note-10" class="section level2">
<h2>NOTE</h2>
<p>It&#39;s a good idea to put COMMON areas declaration for particular task to an insert file and include it into every relevant source file.</p>
</div>
<div id="example-59" class="section level2">
<h2>EXAMPLE</h2>
<p>File I_MYTASK.COMMON:</p>
<pre><code>   COMMON /MY.AREA/ global_var, global_dyn_array</code></pre>
<p>Program test.b:</p>
<pre><code>   $INSERT I_MYTASK.COMMON
   &amp;nbsp;
   global_var = 42
   EXECUTE &#39;test2&#39;</code></pre>
<p>Program test2.b:</p>
<pre><code>   $INSERT I_MYTASK.COMMON
   &amp;nbsp;
   CRT global_var
   CRT ASSIGNED(global_dyn_array)</code></pre>
<p>Run program test (<strong>prime</strong> emulation):</p>
<pre>    42
    1</pre>
<p><strong>r83</strong> emulation:</p>
<pre>    42
    0</pre>
</div>
<div id="note-11" class="section level2">
<h2>NOTE</h2>
<p>If number of variables in COMMON area changes, all relevant source files are to be recompiled.</p>
</div>
</div>



</body></html>