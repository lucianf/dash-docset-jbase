<!--?xml version="1.0" encoding="UTF-8"?--><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <meta http-equiv="Content-Style-Type" content="text/css"/>
  <meta name="generator" content="pandoc"/>
  <title class="statement">CRT</title>
  <link rel="stylesheet" type="text/css" href="stylesheet.css"/>
</head>
<body>
<div id="crt-statement" class="section level1">
<a class="dashingAutolink" name="autolink-101"></a><a class="dashAnchor" name="//apple_ref/cpp/Method/CRT"></a><h1 class="statement">CRT</h1>
<p>The CRT statement sends data directly to the terminal, even if a PRINTER ON statement is currently active.</p>
<div id="command-syntax-66" class="section level2">
<h2>COMMAND SYNTAX</h2>
<pre><code>CRT expression {, expression..} {:}</code></pre>
</div>
<div id="syntax-elements-37" class="section level2">
<h2>SYNTAX ELEMENTS</h2>
<p>An expression can evaluate to any data type. The CRT statement will convert the result to a string type for printing. Expressions separated by commas will be sent to the screen separated by a tab character.</p>
<p>The CRT statement will append a newline sequence to the final expression unless it is terminated with a colon (&#34;:&#34;) character.</p>
</div>
<div id="notes-40" class="section level2">
<h2>NOTES</h2>
<p>As the expression can be any valid expression, it may have output formatting applied to it.</p>
<p>A jBC program is normally executed using buffered output mode. This means that data is not flushed to the terminal screen unless a newline sequence is printed or terminal input is requested. This makes it very efficient. However you can force output to be flushed to the terminal by printing a null character CHAR (0). This has the same effect as a newline sequence but without affecting screen output.</p>
<p>For compatibility, use DISPLAY in place of CRT.</p>
</div>
<div id="examples-7" class="section level2">
<h2>EXAMPLES</h2>
<pre><code>   V.VAR = 5
   CRT V.VAR           ;* 5
   V.VAR ++
   CRT V.VAR           ;* 6 (on the next line)
   V.VAR ++
   CRT &#39;&#39;              ;* start a new line
   CRT V.VAR           ;* 7 (2 lines below &#34;6&#34;)
   V.RESULT = 50
   CRT &#39;The result: &#39;:
   CRT V.RESULT        ;* will output: &#34;The result: 50&#34; on the same line
   MSLEEP(3000)
   CRT @(-1)                    ;* clears the screen and homes the cursor
   CRT @(40, 12):&#39;Hello&#39;        ;* will start output at row 11, column 39
   CRT &#39;&#39;
   V.NUM = 39
   V.STRING = &#39;In the year of&#39;
   CRT V.STRING : &#39; &#39; : V.NUM    ;* In the year of 39
   CRT V.STRING, V.NUM           ;* In the year of  39
   V.LINE = &#39;39R&#39;
   V.STRING = &#39;In the year of&#39;
   CRT V.STRING V.LINE             ;* same as FMT(V.STRING, &#39;39R&#39;)
   V.VAR = 5
   CRT V.VAR &gt; 1           ;* Result of an expression (1 in this case)
   CRT @SYS.BELL           ;* rings the bell</code></pre>
</div>
</div>



</body></html>