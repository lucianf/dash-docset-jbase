<!--?xml version="1.0" encoding="UTF-8"?--><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <meta http-equiv="Content-Style-Type" content="text/css"/>
  <meta name="generator" content="pandoc"/>
  <title class="statement">ABORT</title>
  <link rel="stylesheet" type="text/css" href="stylesheet.css"/>
</head>
<body>
<div id="abort-statement" class="section level1">
<a class="dashingAutolink" name="autolink-33"></a><a class="dashAnchor" name="//apple_ref/cpp/Method/ABORT"></a><h1 class="statement">ABORT</h1>
<p>The ABORT statement terminates the current running program and the program that called it.</p>
<div id="command-syntax-2" class="section level2">
<h2>COMMAND SYNTAX</h2>
<pre><code>ABORT {message.number {, expression ...}}</code></pre>
</div>
<div id="syntax-elements-2" class="section level2">
<h2>SYNTAX ELEMENTS</h2>
<p>The optional message.number provided with the statement must be a numeric value, which corresponds to a record key in the TAFC error message file.</p>
<p>A single expression or a list of expression(s) may follow the message.number. Where more than one expression is listed, they must be delimited by the use of the comma character. The expression(s) correspond to the parameters that need passing to the error file record to print it.</p>
<p>The optional message.number and expression(s) given with the command are parameters or resultants provided as variables, literal strings, expressions, or functions.</p>
</div>
<div id="notes-2" class="section level2">
<h2>NOTES</h2>
<p>Use this statement to terminate the execution of a jBC program together with any calling program. It will then optionally display a message, and return to the shell prompt.</p>
<p>The error file holds the optional message displayed on terminating the program. For successful printing of the message, parameters such as linefeeds, clearscreen, date and literal strings may also be required. Setting the Command Level Restart option can alter operation of this command.</p>
</div>
<div id="example-5" class="section level2">
<h2>EXAMPLE</h2>
<pre><code>* Open a file with random name (just to make sure that it doesn&#39;t exist)
   V.FNAME = &#39;&#39;
   FOR V.J = 1 TO 8
      V.RND = RND(26) + 65
      V.FNAME := CHAR(V.RND)        ;* A...Z
   NEXT V.J
   OPEN V.FNAME TO F.RAND ELSE ABORT 201, V.FNAME</code></pre>
<p>Sample program output:</p>
<pre>     &lowast;&lowast;&lowast; Error [ 201 ] &lowast;&lowast;
    Unable to open file XCICLJPH</pre>
</div>
</div>



</body></html>